// class Person {
//   prop: number;
//   prop2!: number; //–Ω–µ –∑–Ω–∞—é —á—Ç–æ —Ç–∞–º –±—É–¥–µ—Ç, —è –ø–æ—Ç–æ–º —Å–∞–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é –∑–Ω–∞—á–µ–Ω–∏–µ
//   prop3?: number; // –Ω–µ –∑–Ω–∞—é, –±—É–¥–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ –≤–æ–æ–±—â–µ –∏–ª–∏ –Ω–µ—Ç ???(–º–æ–∂–µ—Ç undefind | null –∏ —Ç–æ–≥–¥–∞ –±—É–¥–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–æ-–¥—Ä—É–≥–æ–º—É)
//   constructor() {
//     this.prop = 123;
//     // this.prop2 = ?? –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω –ø–æ–∑–∂–µ !!!!
//     // this.prop3 = ?? –≤–æ–∑–º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω, –Ω–æ –º–æ–∂–µ—Ç –∏ –Ω–µ –±—É–¥–µ—Ç ????
//   }
// }

// –ø—É–±–ª–∏—á–Ω—ã–µ, –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∏ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
// –≤–∞—Ä–∏–∞–Ω—Ç JS
// class Person {
//   public name: string;
//   protected age: number;
//   private gender: string;
//   skills: string[];

//   constructor(name: string, age: number, gender: string, skills: string[]) {
//     this.name = name;
//     this.age = age;
//     this.gender = gender;
//     this.skills = skills;
//   }
// }

// –≤–∞—Ä–∏–∞–Ω—Ç TS
// –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–æ—Å—Ç—É–ø–∞, –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏ –µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ–±—ä—è–≤–ª—è—Ç—å –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å, —Å–≤–æ–π—Å—Ç–≤–∞ —Å–æ–∑–¥–∞–¥—É—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
class Person {
  //     –Ω–µ –Ω—É–∂–Ω–æ –æ–±—ä—è–≤–ª—è—Ç—å
  //   public name: string;
  //   protected age: number;
  //   private gender: string;
  //   skills: string[];

  constructor(
    public name: string,
    protected age: number,
    private gender: string,
    public skills: string[]
  ) {
    //   –Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å
    // this.name = name;
    // this.age = age;
    // this.gender = gender;
    // this.skills = skills;
  }
}

const person = new Person('Jhon', 25, 'male', ['html', 'css']);
console.log('üöÄ ~ person:', person);
console.log('üöÄ ~ person.name:', person.name);
console.log('üöÄ ~ person.skills:', person.skills);
