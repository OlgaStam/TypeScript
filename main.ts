function AddPrinter(constrClass: Function) {
  console.dir(constrClass);
  constrClass.prototype.printInfo = function () {
    const p = document.createElement('p');

    p.innerHTML = `${JSON.stringify(this)}<br> 
    –ò–º—è: ${this.name}<br>
    –í–æ–∑—Ä–∞—Å—Ç: ${this.age}<br>
    –ü–æ–ª: ${this.gender}<br>
    –ì–æ—Ä–æ–¥: ${this.location}<br>
    `;

    document.body.append(p);
  };
}

@AddPrinter
class Developer {
  constructor(
    public name: string,
    public age: number,
    public gender: string,
    public location: string
  ) {}
}
const developer: any = new Developer('John', 25, 'male', 'New York');
developer.printInfo();

// -----------------

function Override(label: string) {
  return function (target: any, key: string) {
    // console.log('üöÄ ~ key:', key);
    // console.log('üöÄ ~ target:', target);
    Object.defineProperty(target, key, {
      configurable: false,
      get: () => label,
      set: (v) => {}
    });
  };
}

function ReadOnly(target: any, key: string) {
  // console.log('üöÄ ~ key:', key);
  // console.log('üöÄ ~ target:', target);
  Object.defineProperty(target, key, {
    // value: 'Default value',
    get: () => 'Default value',
    // writable: false
    set: (v) => {}
  });
}

class Test {
  // @Override('Hello world')
  @ReadOnly //–±–µ–∑ —Å–∫–æ–±–æ–∫ - —Ç–∞—Ä–≥–µ—Ç –∏ –∫–ª—é—á –ø–æ–ª—É—á–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é, –º–∏–Ω—É—è —Ñ—É–Ω–∫—Ü–∏—é - –æ–±–µ—Ä—Ç–∫—É
  castomKey: string = 'any string';
}

const t = new Test();
// –µ—Å–ª–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –≤—ã–∫–ª—é—á–∏—Ç—å   // @Override('Hello world')
// console.log(t.castomKey); //any string
// t.castomKey = 'new string name';
// console.log(t.castomKey); //new string name

// –µ—Å–ª–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –≤–∫–ª—é—á–∏—Ç—å   @Override('Hello world') - —Å–≤–æ–π—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç–æ –æ—Ç –∑–∞–ø–∏—Å–∏, –ø–æ–ª—É—á–∏–ª–æ –Ω–µ–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
// –ø–æ —Å—É—Ç–∏ –∫–ª–∞—Å—Å –∑–∞–ø–µ—á–∞—Ç–∞–Ω —Å –ø–æ–º–æ—â—å—é –∑–∞–º–µ–Ω—ã –±–∞–∑–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
console.log(t.castomKey); //Hello world
t.castomKey = 'new string name';
console.log(t.castomKey); //Hello world
